cmake_minimum_required(VERSION 3.16)
project(WorldOfElectron)

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

set(WOE_INCLUDE_DIR ${CMAKE_SOURCE_DIR}/include)
set(WOE_SRC_DIR ${CMAKE_SOURCE_DIR}/src)

file(GLOB_RECURSE WOE_HEADERS
    ${WOE_INCLUDE_DIR}/*.hpp
    ${WOE_INCLUDE_DIR}/*.h
)
file(GLOB_RECURSE WOE_SOURCES ${WOE_SRC_DIR}/*.cpp)

add_executable(WorldOfElectron ${WOE_SOURCES} ${WOE_HEADERS})

target_include_directories(WorldOfElectron
    PRIVATE
        $<BUILD_INTERFACE:${WOE_INCLUDE_DIR}>
)

find_package(Sparkle REQUIRED)
target_link_libraries(WorldOfElectron PRIVATE Sparkle::Sparkle)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/out/bin/$<IF:$<CONFIG:Debug>,Debug,Release>)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/out/lib/$<IF:$<CONFIG:Debug>,Debug,Release>)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/out/lib/$<IF:$<CONFIG:Debug>,Debug,Release>)
set(CMAKE_OBJECT_PATH_MAX 4096)

set(CMAKE_OBJECT_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/out/obj/$<IF:$<CONFIG:Debug>,Debug,Release>)

if (CMAKE_SIZEOF_VOID_P EQUAL 8)
    set(ARCH_FOLDER x64)
else()
    set(ARCH_FOLDER x86)
endif()

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${ARCH_FOLDER})
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${ARCH_FOLDER})
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/${ARCH_FOLDER})
set(CMAKE_OBJECT_OUTPUT_DIRECTORY ${CMAKE_OBJECT_OUTPUT_DIRECTORY}/${ARCH_FOLDER})

message(STATUS "CMAKE_RUNTIME_OUTPUT_DIRECTORY: ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
message(STATUS "CMAKE_LIBRARY_OUTPUT_DIRECTORY: ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
message(STATUS "CMAKE_ARCHIVE_OUTPUT_DIRECTORY: ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}")
message(STATUS "CMAKE_OBJECT_OUTPUT_DIRECTORY: ${CMAKE_OBJECT_OUTPUT_DIRECTORY}")

install(TARGETS WorldOfElectron
    RUNTIME DESTINATION bin
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
)
